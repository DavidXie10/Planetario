
@model Planetarium.Models.FrequentlyQuestionModel
@{          
    ViewBag.Title = "Crear Pregunta";
    
}
<html>
<head>
</head>
<body>
    @if (ViewBag.Message != null) {
        if (ViewBag.SuccessOnCreation) {
            <div class="alert-success">
                <h3> @ViewBag.Message </h3>
            </div>
        } else {
            <div class="alert-danger">
                <h3> @ViewBag.Message </h3>
            </div>
        }
    }
   
    @using (Html.BeginForm("CreateFrequentlyAskedQuestionRawHTML", null, FormMethod.Post, new { enctype = "multipart/form-data" })) {
        @Html.AntiForgeryToken()
        <h1>Formulario para agregar preguntas</h1>
        <div class="form-horizontal">
            <div class="form-group">
                @Html.LabelFor(model => model.Category)
                <br />
                <select id="categorySelector" name="category">
                    <option value="value">------</option>
                    @foreach (string category in ViewBag.categories) {

                        <option value="@category">@category</option>
                    }
                </select>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Topics)
                <br />
                <select class="se" id="topicSelector" name="topic">
                    <option value="value">------</option>
                    @foreach (string topic in ViewBag.topics[1]) {
                        <option value="@topic">@topic</option>
                    }
                </select>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Question)
                <br />
                <textarea rows="5" name="question"></textarea>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Question)
                <br />
                <textarea rows="5" name="answer"></textarea>
            </div>

            <input type="submit" class="btn btn-success" value="Crear" />

        </div>


    }

<script>

        let categorySelector = document.querySelector("#categorySelector");
        let topicSelector = document.querySelector("#topicSelector");

        let categories = @Html.Raw(Json.Encode(ViewBag.categories));
        let topics = @Html.Raw(Json.Encode(ViewBag.topics));

        categorySelector.addEventListener('change', (event) => {
        topicSelector.innerHTML = "";
        let selectedIndex = categorySelector.selectedIndex - 1;
        let option = document.createElement("option");
        let textNode = document.createTextNode("----");
        option.appendChild(textNode);
        option.value = "----";
        topicSelector.append(option);
        for (i = 0; i < topics[selectedIndex].length; i++) {
            let option = document.createElement("option");
            let textNode = document.createTextNode(topics[selectedIndex][i]);
            option.appendChild(textNode);
            option.value = topics[selectedIndex][i];
            topicSelector.append(option);
        }
        })


        //Crear el option menu desde javascript


</script>

</body>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

</html>