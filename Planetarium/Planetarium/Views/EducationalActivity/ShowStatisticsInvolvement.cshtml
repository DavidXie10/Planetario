<!DOCTYPE html>
<html>
<head>
    <title>Estadísticas por tema</title>
    <script src="https://cdn.anychart.com/releases/8.0.0/js/anychart-base.min.js"></script>
</head>
<body>
    <div class="container">
        <h1 style="margin:10px 0 20px 0;">Estadísticas de Involucramiento</h1>
        <div class="row">
            <div class="col">
                <h5>Seleccione las categorías</h5>
                <select class="form-select" id="categorySelect" onchange="addCategoryButton(this.value), updateChart('inputCategoryString', @ViewBag.CategoriesRank, 'categoriesChart', 1)">
                    <option value="">Seleccione la(s) categoría(s)</option>
                    @foreach (var category in ViewBag.TopicsByCategory) {
                        <option value="@category.Key">@category.Key</option>
                    }
                </select>

                <br />
                <br />
                <div class="card" style="margin: 10px 0 10px 0" >
                    <div class="card-header">
                        <h4 class="text-success text-center">Categorías seleccionadas</h4>
                    </div>
                    <div class="card-body" id="categoryContainer" onclick="updateChart('inputCategoryString', @ViewBag.CategoriesRank, 'categoriesChart', 1)">
                    </div>
                    <input type="text" name="inputCategoryString" id="inputCategoryString" value="" style="display: none;"/>
                </div>
                <div id="categoriesChart" style="height: 500px; width: 100%; display: none"></div>
            </div>

            <div class="col">
                <h5>Seleccione los topicos</h5>
                <select class="form-select" id="topicSelect" onchange="addTopicButton(this.value), updateChart('inputTopicString', @ViewBag.TopicsRank, 'topicsChart', 0)">
                    <option value="">Seleccione los tópicos</option>
                    @foreach (var category in ViewBag.TopicsByCategory) {
                        foreach (var topic in category.Value) {
                            <option value="@topic">@topic</option>
                        }
                    }
                </select>

                <br />
                <br />
                <div class="card" style="margin: 10px 0 10px 0">
                    <div class="card-header">
                        <h4 class="text-success text-center">Topicos seleccionados</h4>
                    </div>
                    <div class="card-body" id="topicsContainer" onclick="updateChart('inputTopicString', @ViewBag.TopicsRank, 'topicsChart', 0)" >
                    </div>
                    <input type="text" name="inputTopicString" id="inputTopicString" value="" style="display: none;" />
                </div>
                <div id="topicsChart" style="height: 500px; width: 100%; display: none"></div>
            </div>   
        </div>
        
    </div>

    <script src="~/Scripts/jquery-3.4.1.min.js"></script>
    <script src="~/Scripts/GenericMultiselect.js"></script>
    <script type="text/javascript">
        let multiSelectCategory = new GenericMultiSelect("#categorySelect", "#categoryContainer", "#inputCategoryString");
        let multiSelectTopics = new GenericMultiSelect("#topicSelect", "#topicsContainer", "#inputTopicString");
    </script>

    <script type="text/javascript">
        console.log('hola');
        let categoriesData = null;
        let topicsData = null;
        categoriesData = createChart(@ViewBag.CategoriesRank, "Ranking de Categorias", "categoriesChart");
        topicsData = createChart(@ViewBag.TopicsRank, "Ranking de Tópicos", "topicsChart");
        
        
        function createChart(rawElementsRank, title, idChartContainer) {
            let elementsRank = Html.Raw(Json.Encode(rawElementsRank));
            
            let items = Object.keys(elementsRank).map(function (key) {
                return [key, elementsRank[key]];
            });

            let chart = anychart.bar();
            let data = anychart.data.set(items);

            chart.bar(data);
            chart.title(title);
            chart.container(idChartContainer);
            chart.draw();
        }
        
        function updateChart(inputElementString, elementsRank, idChartContainer, rankingType) {
            let selectedElements = document.getElementById(inputElementString).value;
            let chartData = (rankingType == 1) ? categoriesData : topicsData;

            selectedElements = sortElements(selectedElements, elementsRank).substring(0, selectedElements.length - 1);
            removeAll(chartData, elementsRank.length);

            let words = selectedElements.split('|');
            let counter = 0;

            for (let word of words) {
                chartData.insert({ x: word, value: elementsRank[word] }, counter++);
            }

            if (chartData.getRowsCount() == 0) {
                document.getElementById(idChartContainer).setAttribute("style", "display: none;");
            } else {
                document.getElementById(idChartContainer).setAttribute("style", "display: block;");
            }
        }

        function removeAll(chartData, length) {
            for (let element = 0; element < length; ++element ) {
                chartData.remove(0);
            }
        }

        function sortElements(selectedElements, rankType) {
            let rankedElements = "";
            for (let element in rankType) {
                if (selectedElements.search(element) != -1) {
                    rankedElements += element + "|";
                }
            }
            return rankedElements;
        }

    </script>

</body>
</html>