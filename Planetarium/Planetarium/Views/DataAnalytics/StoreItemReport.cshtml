@{
    string simpleItemReportUrl = Url.Content("~/DataAnalytics/GetSimpleItemReport");
    string simpleTicketReportUrl = Url.Content("~/DataAnalytics/GetSimpleTicketReport");
    string advancedTicketReportUrl = Url.Content("~/DataAnalytics/GetAdvanceTicketReport");
    string advancedItemReportUrl = Url.Content("~/DataAnalytics/GetAdvanceItemReport");
}

<div class="container">

    <h1>Reporte de Compra</h1>


    <div class="card border-0">
        <div class="card-body">
            <div class="row d-flex align-items-center">
                <div class="col-2">
                    <label>Desde:</label>
                    <input type="date" name="name" value="" id="startDate" />
                </div>

                <div class="col-2">
                    <label>Hasta:</label>
                    <input type="date" name="name" value="" id="endDate" />
                </div>
                <hr style="margin-top: 20px" />
                <div class="col">
                    <input type="radio" name="name" value="" class="form-check-input" />
                    <label class="form-check-label">General</label>
                    <span style="margin: 0 10px 0 10px;"></span>
                    <input type="radio" name="name" value="" class="form-check-input"  id="advancedSelector"/>
                    <label class="form-check-label">Avanzado</label>
                </div>
            </div>
            
            <div class="row d-flex align-items-center text-center">
                <hr style="margin-top: 20px" />
                <div class="col">
                    <button class="btn btn-info" onclick="generateItemsReport()">Generar Reporte de Artículos</button>
                </div>

                <div class="col">
                    <button class="btn btn-info" onclick="generateTicketsReport()">Generar Reporte de Tiquetes</button>
                </div>
            </div>
        </div>
    </div>
    


    <div class="card">
        <div class="card-body">
            <table id="reportContainer" class="table"></table>
        </div>
    </div>
</div>

<script>

    class ReportGenerator {
        constructor(inputDateIds, tableId, reportType) {
            this.startInput = document.querySelector(inputDateIds[0]);
            this.endInput = document.querySelector(inputDateIds[1]);
            console.log(this.startInput);
            this.table = document.querySelector(tableId);
            this.reportType = reportType;
        }

        async generateItemReport(fetchUrl, tableHeaderNames) {
            fetchUrl += "?startDate=" + this.startInput.value + "&endDate=" + this.endInput.value;
            let items = await this.fetchModelsFromDatabase(fetchUrl);
            
            this.loadTableTable(items, tableHeaderNames);
        }

        async generateTicketReport(fetchUrl, tableHeaderNames) {
            fetchUrl += "?startDate=" + this.startInput.value + "&endDate=" + this.endInput.value;
            let items = await this.fetchModelsFromDatabase(fetchUrl);
            
            this.loadTableTable(items, tableHeaderNames);
        }

        loadTableTable(data, tableHeaderNames) {
            this.table.innerText = "";

            //Loading the header columns
            this.loadTableHeader(tableHeaderNames);

            //Loading the table content
            this.loadTableContent(data);

        }

        loadTableHeader(tableHeaderNames) {
            let tableHead = this.table.createTHead();
            let row = tableHead.insertRow(0);
            let attributeCounter = 0;

            tableHeaderNames.forEach(name => {
                let cell = row.insertCell(attributeCounter);
                let text = document.createTextNode(name);
                cell.appendChild(text);
                cell.style.textAlign = "center";
                attributeCounter++;
            });
        }

        loadTableContent(data) {
            let tbody = this.table.createTBody();
            data.forEach(element => {
                let tr = document.createElement("tr");

                for (const [key, value] of Object.entries(element)) {
                    let td = document.createElement("td");
                    let result = value;
                    if (key == "Income") {
                        result = '₡' + result;
                    }
                    let text = document.createTextNode(result);

                    td.appendChild(text);
                    td.style.textAlign = "center";
                    tr.appendChild(td);

                }
                tbody.appendChild(tr);
            })
        }


        async fetchModelsFromDatabase(fetchUrl) {
            const response = await fetch(fetchUrl);
            const data = await response.json();
            console.log(data);
            return data;
        }

    }

    let inputIds = ["#startDate", "#endDate"];
    let tableId = "#reportContainer";
    let reportGenerator = new ReportGenerator(inputIds, tableId, "simple");


    function generateItemsReport() {
        let advancedActive = document.querySelector("#advancedSelector").checked;
        if (!advancedActive) {
            let tableHeaderNames = ["ID", "Nombre", "Cantidad Vendida", "Ultima Fecha de Compra", "Precio del Producto", "Ingreso"];
            reportGenerator.generateItemReport("@simpleItemReportUrl", tableHeaderNames);
        } else {
            let tableHeaderNames = ["ID", "Nombre", "Infantil", "Juvenil", "Adulto", "Adulto Mayor", "Ingreso"];
            reportGenerator.generateItemReport("@advancedItemReportUrl", tableHeaderNames);
        }

    }

    function generateTicketsReport() {
        let advancedActive = document.querySelector("#advancedSelector").checked;
        if (!advancedActive) {
            let tableHeaderNames = ["Nombre de la Actividad", "Fecha de Inicio", "Cantidad Vendida", "Ingreso"];
            reportGenerator.generateTicketReport("@simpleTicketReportUrl", tableHeaderNames);
        } else {
            let tableHeaderNames = ["Nombre de la Actividad", "Fecha de Inicio", "Infantil", "Juvenil", "Adulto", "Adulto Mayor", "Ingreso"];
            reportGenerator.generateTicketReport("@advancedTicketReportUrl", tableHeaderNames);
        }

    }
</script>